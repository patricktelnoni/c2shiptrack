# Generated by Django 3.0.2 on 2020-01-20 08:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ReferencePoints',
            fields=[
                ('object_type', models.CharField(blank=True, max_length=100, null=True)),
                ('object_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('visibility_type', models.CharField(blank=True, max_length=100, null=True)),
                ('point_amplification_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_editable', models.BooleanField(blank=True, null=True)),
                ('network_track_number', models.IntegerField(blank=True, null=True)),
                ('link_status_type', models.CharField(blank=True, max_length=100, null=True)),
                ('last_update_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reference_points',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sessions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TacticalFigureList',
            fields=[
                ('object_id', models.IntegerField(primary_key=True, serialize=False)),
                ('object_type', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('environment', models.CharField(blank=True, max_length=255, null=True)),
                ('shape', models.CharField(blank=True, max_length=255, null=True)),
                ('displaying_popup_alert_status', models.BooleanField(blank=True, null=True)),
                ('line_color', models.TextField(blank=True, null=True)),
                ('fill_color', models.TextField(blank=True, null=True)),
                ('identity_list', models.TextField(blank=True, null=True)),
                ('warning_list', models.TextField(blank=True, null=True)),
                ('evaluation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('visibility_type', models.CharField(blank=True, max_length=255, null=True)),
                ('last_update_time', models.DateTimeField(blank=True, null=True)),
                ('network_track_number', models.IntegerField(blank=True, null=True)),
                ('link_status_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_editable', models.BooleanField(blank=True, null=True)),
                ('point_amplification_type', models.CharField(blank=True, max_length=100, null=True)),
                ('point_keys', models.TextField(blank=True, null=True)),
                ('points', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tactical_figure_list',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TacticalFigures',
            fields=[
                ('object_type', models.CharField(blank=True, max_length=255, null=True)),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('tf_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tf_environment', models.CharField(blank=True, max_length=255, null=True)),
                ('tf_shape', models.CharField(blank=True, max_length=255, null=True)),
                ('tf_line_color', models.TextField(blank=True, null=True)),
                ('tf_fill_color', models.TextField(blank=True, null=True)),
                ('is_visible', models.CharField(blank=True, max_length=255, null=True)),
                ('last_update_time', models.DateTimeField(blank=True, null=True)),
                ('network_track_number', models.IntegerField(blank=True, null=True)),
                ('link_status_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_editable', models.BooleanField(blank=True, null=True)),
                ('point_amplification_type', models.CharField(blank=True, max_length=100, null=True)),
                ('point_keys', models.TextField(blank=True, null=True)),
                ('points', models.TextField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'tactical_figures',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplayTrackGeneralSetting',
            fields=[
                ('system_track_number', models.IntegerField()),
                ('speed_label_visibility', models.CharField(blank=True, max_length=255, null=True)),
                ('track_name_label_visibility', models.CharField(blank=True, max_length=255, null=True)),
                ('radar_coverage_visibility', models.CharField(blank=True, max_length=255, null=True)),
                ('track_visibility', models.CharField(blank=True, max_length=255, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_track_general_setting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplaySystemTrackProcessing',
            fields=[
                ('system_track_number', models.IntegerField()),
                ('track_fusion_status', models.CharField(blank=True, max_length=255, null=True)),
                ('track_join_status', models.CharField(blank=True, max_length=255, null=True)),
                ('daughter_tracks', models.TextField(blank=True, null=True)),
                ('track_phase_type', models.CharField(blank=True, max_length=255, null=True)),
                ('track_suspect_level', models.CharField(blank=True, max_length=255, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_system_track_processing',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplaySystemTrackMission',
            fields=[
                ('system_track_number', models.IntegerField()),
                ('mission_name', models.CharField(max_length=255)),
                ('route', models.CharField(blank=True, max_length=255, null=True)),
                ('voice_call_sign', models.CharField(blank=True, max_length=255, null=True)),
                ('voice_frequency_channel', models.IntegerField(blank=True, null=True)),
                ('fuel_status', models.IntegerField(blank=True, null=True)),
                ('radar_coverage', models.FloatField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_system_track_mission',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplaySystemTrackLink',
            fields=[
                ('system_track_number', models.IntegerField()),
                ('network_track_number', models.IntegerField(blank=True, null=True)),
                ('associated_track_number', models.IntegerField(blank=True, null=True)),
                ('originator_address', models.IntegerField(blank=True, null=True)),
                ('controlling_unit_address', models.IntegerField(blank=True, null=True)),
                ('network_track_quality', models.IntegerField(blank=True, null=True)),
                ('link_status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_system_track_link',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplaySystemTrackKinetic',
            fields=[
                ('system_track_number', models.IntegerField()),
                ('track_name', models.CharField(blank=True, max_length=255, null=True)),
                ('heading', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('range', models.FloatField(blank=True, null=True)),
                ('bearing', models.FloatField(blank=True, null=True)),
                ('height_depth', models.FloatField(blank=True, null=True)),
                ('speed_over_ground', models.FloatField(blank=True, null=True)),
                ('course_over_ground', models.FloatField(blank=True, null=True)),
                ('last_update_time', models.DateTimeField(blank=True, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_system_track_kinetic',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplaySystemTrackIdentification',
            fields=[
                ('system_track_number', models.IntegerField()),
                ('identity', models.CharField(blank=True, max_length=255, null=True)),
                ('environment', models.CharField(blank=True, max_length=255, null=True)),
                ('air_platform', models.CharField(blank=True, max_length=255, null=True)),
                ('surf_platform', models.CharField(blank=True, max_length=255, null=True)),
                ('land_platform', models.CharField(blank=True, max_length=255, null=True)),
                ('air_platform_activity', models.CharField(blank=True, max_length=255, null=True)),
                ('surf_platform_activity', models.CharField(blank=True, max_length=255, null=True)),
                ('land_platform_activity', models.CharField(blank=True, max_length=255, null=True)),
                ('air_specific', models.CharField(blank=True, max_length=255, null=True)),
                ('surf_specific', models.CharField(blank=True, max_length=255, null=True)),
                ('land_specific', models.CharField(blank=True, max_length=255, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_system_track_identification',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplaySystemTrackGeneral',
            fields=[
                ('system_track_number', models.IntegerField()),
                ('track_name', models.CharField(blank=True, max_length=255, null=True)),
                ('network_track_number', models.IntegerField(blank=True, null=True)),
                ('identity', models.CharField(blank=True, max_length=255, null=True)),
                ('environment', models.CharField(blank=True, max_length=255, null=True)),
                ('object_type', models.CharField(blank=True, max_length=255, null=True)),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('primitive_data_source', models.CharField(blank=True, max_length=2, null=True)),
                ('accuracy_level', models.IntegerField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=20, null=True)),
                ('own_unit_indicator', models.CharField(blank=True, max_length=20, null=True)),
                ('iu_indicator', models.CharField(blank=True, max_length=20, null=True)),
                ('c2_indicator', models.CharField(blank=True, max_length=20, null=True)),
                ('special_processing_indicator', models.CharField(blank=True, max_length=20, null=True)),
                ('force_tell_indicator', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_indicator', models.CharField(blank=True, max_length=20, null=True)),
                ('simulation_indicator', models.CharField(blank=True, max_length=20, null=True)),
                ('last_update_time', models.DateTimeField(blank=True, null=True)),
                ('initiation_time', models.DateTimeField(blank=True, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_system_track_general',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplayReferencePoint',
            fields=[
                ('object_type', models.CharField(blank=True, max_length=100, null=True)),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('visibility_type', models.CharField(blank=True, max_length=100, null=True)),
                ('point_amplification_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_editable', models.BooleanField(blank=True, null=True)),
                ('network_track_number', models.IntegerField(blank=True, null=True)),
                ('link_status_type', models.CharField(blank=True, max_length=100, null=True)),
                ('last_update_time', models.DateTimeField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_reference_point',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReplayAisData',
            fields=[
                ('system_track_number', models.IntegerField()),
                ('mmsi_number', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('radio_call_sign', models.CharField(blank=True, max_length=255, null=True)),
                ('imo_number', models.IntegerField(blank=True, null=True)),
                ('navigation_status', models.CharField(blank=True, max_length=255, null=True)),
                ('destination', models.CharField(blank=True, max_length=255, null=True)),
                ('dimensions_of_ship', models.CharField(blank=True, max_length=255, null=True)),
                ('type_of_ship_or_cargo', models.CharField(blank=True, max_length=255, null=True)),
                ('rate_of_turn', models.FloatField(blank=True, null=True)),
                ('position_accuracy', models.FloatField(blank=True, null=True)),
                ('gross_tonnage', models.IntegerField(blank=True, null=True)),
                ('ship_country', models.CharField(blank=True, max_length=100, null=True)),
                ('created_time', models.DateTimeField(blank=True, null=True)),
                ('eta_at_destination', models.DateTimeField(blank=True, null=True)),
                ('vendor_id', models.CharField(blank=True, max_length=200, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'replay_ais_data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AreaAlerts',
            fields=[
                ('object_type', models.CharField(blank=True, max_length=255, null=True)),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('warning_type', models.CharField(blank=True, max_length=255, null=True)),
                ('track_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_update_time', models.DateTimeField(blank=True, null=True)),
                ('mmsi_number', models.IntegerField(blank=True, null=True)),
                ('ship_name', models.CharField(blank=True, max_length=100, null=True)),
                ('track_source_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_visible', models.CharField(blank=True, max_length=255, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='c2shiptrack.Sessions')),
            ],
            options={
                'db_table': 'area_alerts',
                'managed': True,
            },
        ),
    ]
